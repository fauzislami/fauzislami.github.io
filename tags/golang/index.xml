<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Golang on Blog Â· Muhammad Fauzi Islami</title>
    <link>https://fauzislami.github.io/tags/golang/</link>
    <description>Recent content in Golang on Blog Â· Muhammad Fauzi Islami</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 06 Sep 2022 09:45:27 +0700</lastBuildDate><atom:link href="https://fauzislami.github.io/tags/golang/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Golang&#39;s Linter Aggregator: Golangci-lint</title>
      <link>https://fauzislami.github.io/blog/linter-aggregator-golangci-lint/</link>
      <pubDate>Tue, 06 Sep 2022 09:45:27 +0700</pubDate>
      
      <guid>https://fauzislami.github.io/blog/linter-aggregator-golangci-lint/</guid>
      <description>.notice{padding:18px;line-height:24px;margin-bottom:24px;border-radius:4px;color:#444;background:#e7f2fa}.notice p:last-child{margin-bottom:0}.notice-title{margin:-18px -18px 12px;padding:4px 18px;border-radius:4px 4px 0 0;font-weight:700;color:#fff;background:#6ab0de}.notice.warning .notice-title{background:rgba(217,83,79,.9)}.notice.warning{background:#fae2e2}.notice.info .notice-title{background:#f0b37e}.notice.info{background:#fff2db}.notice.note .notice-title{background:#6ab0de}.notice.note{background:#e7f2fA}.notice.tip .notice-title{background:rgba(92,184,92,.8)}.notice.tip{background:#e6f9e6}.icon-notice{display:inline-flex;align-self:center;margin-right:8px}.icon-notice img,.icon-notice svg{height:1em;width:1em;fill:currentColor}.icon-notice img,.icon-notice.baseline svg{top:0.125em;position:relative} Note
Disclaimer: I&amp;rsquo;m not a Golang developer ðŸ˜„
 Intro A few days ago I had something to research regarding linter in Golang. Some says there&amp;rsquo;s a linter which has stricter checking and a faster process than any common linter like golint. It&amp;rsquo;s golangci-lint. Hence, I was curiously looking up some theoretically information of it and having some hands-on practice to see how it works and how to use it.</description>
    </item>
    
  </channel>
</rss>
